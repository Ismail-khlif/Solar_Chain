"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_sc_client_node_modules_thirdweb-dev_sdk_dist_split-ede30470_esm_js";
exports.ids = ["_sc_client_node_modules_thirdweb-dev_sdk_dist_split-ede30470_esm_js"];
exports.modules = {

/***/ "(sc_client)/./node_modules/@thirdweb-dev/sdk/dist/split-ede30470.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/split-ede30470.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Split: () => (/* binding */ Split)\n/* harmony export */ });\n/* harmony import */ var _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contract-publisher-b3c57efd.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-b3c57efd.esm.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20.json */ \"(sc_client)/./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"(sc_client)/./node_modules/ethers/lib/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(sc_client)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"(sc_client)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ \"(sc_client)/./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ \"(sc_client)/./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ \"(sc_client)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cross-fetch */ \"(sc_client)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! eventemitter3 */ \"(sc_client)/./node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create custom royalty splits to distribute funds.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"split\");\n * ```\n *\n * @public\n */\nclass Split {\n  static contractRoles = _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.dF;\n\n  /**\n   * @internal\n   */\n\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.d4(network, address, abi, options, storage);\n    this._chainId = chainId;\n    this.abi = _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.e.parse(abi || []);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.ag(this.contractWrapper, _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.dG, this.storage);\n    this.app = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.a$(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.ah(this.contractWrapper, Split.contractRoles);\n    this.encoder = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.af(this.contractWrapper);\n    this.estimator = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aP(this.contractWrapper);\n    this.events = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aQ(this.contractWrapper);\n    this.interceptor = new _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aR(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get Recipients of this splits contract\n   *\n   * @remarks Get the data about the shares of every split recipient on the contract\n   *\n   * @example\n   * ```javascript\n   * const recipients = await contract.getAllRecipients();\n   * console.log(recipients);\n   * ```\n   */\n  async getAllRecipients() {\n    const recipients = [];\n    let index = ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(0);\n    const totalRecipients = await this.contractWrapper.readContract.payeeCount();\n    while (index.lt(totalRecipients)) {\n      try {\n        const recipientAddress = await this.contractWrapper.readContract.payee(index);\n        recipients.push(await this.getRecipientSplitPercentage(recipientAddress));\n        index = index.add(1);\n      } catch (err) {\n        // The only way we know how to detect that we've found all recipients\n        // is if we get an error when trying to get the next recipient.\n        if (\"method\" in err && err[\"method\"].toLowerCase().includes(\"payee(uint256)\")) {\n          break;\n        } else {\n          throw err;\n        }\n      }\n    }\n    return recipients;\n  }\n\n  /**\n   * Returns all the recipients and their balances in the native currency.\n   *\n   * @returns A map of recipient addresses to their balances in the native currency.\n   */\n  async balanceOfAllRecipients() {\n    const recipients = await this.getAllRecipients();\n    const balances = {};\n    for (const recipient of recipients) {\n      balances[recipient.address] = await this.balanceOf(recipient.address);\n    }\n    return balances;\n  }\n\n  /**\n   * Returns all the recipients and their balances in a non-native currency.\n   *\n   * @param tokenAddress - The address of the currency to check the balances in.\n   * @returns A map of recipient addresses to their balances in the specified currency.\n   */\n  async balanceOfTokenAllRecipients(tokenAddress) {\n    const resolvedToken = await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(tokenAddress);\n    const recipients = await this.getAllRecipients();\n    const balances = {};\n    for (const recipient of recipients) {\n      balances[recipient.address] = await this.balanceOfToken(recipient.address, resolvedToken);\n    }\n    return balances;\n  }\n\n  /**\n   * Get Funds owed to a particular wallet\n   *\n   * @remarks Get the amount of funds in the native currency held by the contract that is owed to a specific recipient.\n   *\n   * @example\n   * ```javascript\n   * // The address to check the funds of\n   * const address = \"{{wallet_address}}\";\n   * const funds = await contract.balanceOf(address);\n   * console.log(funds);\n   * ```\n   */\n  async balanceOf(address) {\n    const resolvedAddress = await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(address);\n    const walletBalance = await this.contractWrapper.readContract.provider.getBalance(this.getAddress());\n    const totalReleased = await this.contractWrapper.readContract[\"totalReleased()\"]();\n    const totalReceived = walletBalance.add(totalReleased);\n    return this._pendingPayment(resolvedAddress, totalReceived, await this.contractWrapper.readContract[\"released(address)\"](resolvedAddress));\n  }\n\n  /**\n   * Get non-native Token Funds owed to a particular wallet\n   *\n   * @remarks Get the amount of funds in the non-native tokens held by the contract that is owed to a specific recipient.\n   *\n   * @example\n   * ```javascript\n   * // The address to check the funds of\n   * const address = \"{{wallet_address}}\";\n   * // The address of the currency to check the contracts funds of\n   * const tokenAddress = \"0x...\"\n   * const funds = await contract.balanceOfToken(address, tokenAddress);\n   * console.log(funds);\n   * ```\n   */\n  async balanceOfToken(walletAddress, tokenAddress) {\n    const resolvedToken = await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(tokenAddress);\n    const resolvedWallet = await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(walletAddress);\n    const erc20 = new ethers__WEBPACK_IMPORTED_MODULE_8__.Contract(resolvedToken, _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_9__, this.contractWrapper.getProvider());\n    const walletBalance = await erc20.balanceOf(this.getAddress());\n    const totalReleased = await this.contractWrapper.readContract[\"totalReleased(address)\"](resolvedToken);\n    const totalReceived = walletBalance.add(totalReleased);\n    const value = await this._pendingPayment(resolvedWallet, totalReceived, await this.contractWrapper.readContract[\"released(address,address)\"](resolvedToken, resolvedWallet));\n    return await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.bb)(this.contractWrapper.getProvider(), resolvedToken, value);\n  }\n\n  /**\n   * Get the % of funds owed to a given address\n   * @param address - the address to check percentage of\n   */\n  async getRecipientSplitPercentage(address) {\n    const resolvedAddress = await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(address);\n    const [totalShares, walletsShares] = await Promise.all([this.contractWrapper.readContract.totalShares(), this.contractWrapper.readContract.shares(address)]);\n    // We convert to basis points to avoid floating point loss of precision\n    return {\n      address: resolvedAddress,\n      splitPercentage: walletsShares.mul(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(1e7)).div(totalShares).toNumber() / 1e5\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Withdraw Funds\n   * @remarks Triggers a transfer to account of the amount of native currency they are owed.\n   *\n   * @example\n   * ```javascript\n   * // the wallet address that wants to withdraw their funds\n   * const walletAddress = \"{{wallet_address}}\"\n   * await contract.withdraw(walletAddress);\n   * ```\n   *\n   * @param walletAddress - The address to distributes the amount to\n   */\n  withdraw = /* @__PURE__ */(0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.db)(async walletAddress => {\n    return _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"release(address)\",\n      args: [await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(walletAddress)]\n    });\n  });\n\n  /**\n   * Triggers a transfer to account of the amount of a given currency they are owed.\n   *\n   * @param walletAddress - The address to distributes the amount to\n   * @param tokenAddress - The address of the currency contract to distribute funds\n   */\n  withdrawToken = /* @__PURE__ */(0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.db)(async (walletAddress, tokenAddress) => {\n    return _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"release(address,address)\",\n      args: [await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(tokenAddress), await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(walletAddress)]\n    });\n  });\n\n  /**\n   * Distribute Funds\n   *\n   * @remarks Distribute funds held by the contract in the native currency to all recipients.\n   *\n   * @example\n   * ```javascript\n   * await contract.distribute();\n   * ```\n   */\n  distribute = /* @__PURE__ */(0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.db)(async () => {\n    return _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"distribute()\",\n      args: []\n    });\n  });\n\n  /**\n   * Distribute Funds\n   *\n   * @remarks Distribute funds held by the contract in the native currency to all recipients.\n   *\n   * @example\n   * ```javascript\n   * // The address of the currency to distribute funds\n   * const tokenAddress = \"0x...\"\n   * await contract.distributeToken(tokenAddress);\n   * ```\n   *\n   * @param tokenAddress - The address of the currency contract to distribute funds\n   */\n  distributeToken = /* @__PURE__ */(0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.db)(async tokenAddress => {\n    return _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"distribute(address)\",\n      args: [await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(tokenAddress)]\n    });\n  });\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async _pendingPayment(address, totalReceived, alreadyReleased) {\n    const addressReceived = totalReceived.mul(await this.contractWrapper.readContract.shares(await (0,_contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.cq)(address)));\n    const totalRoyaltyAvailable = addressReceived.div(await this.contractWrapper.readContract.totalShares());\n    return totalRoyaltyAvailable.sub(alreadyReleased);\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _contract_publisher_b3c57efd_esm_js__WEBPACK_IMPORTED_MODULE_7__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/sdk/dist/split-ede30470.esm.js\n");

/***/ })

};
;