"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_sc_client_node_modules_thirdweb-dev_wallets_evm_connectors_metamask_dist_thirdweb-dev-wallet-3071bb";
exports.ids = ["_sc_client_node_modules_thirdweb-dev_wallets_evm_connectors_metamask_dist_thirdweb-dev-wallet-3071bb"];
exports.modules = {

/***/ "(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-6011bbb1.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-6011bbb1.esm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   W: () => (/* binding */ WagmiConnector)\n/* harmony export */ });\n/* harmony import */ var _thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @thirdweb-dev/chains */ \"(sc_client)/./node_modules/@thirdweb-dev/chains/dist/thirdweb-dev-chains.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(sc_client)/./node_modules/eventemitter3/index.mjs\");\n\n\n\nclass WagmiConnector extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = _thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_1__.defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX2NsaWVudCkvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi93YWxsZXRzL2Rpc3QvV2FnbWlDb25uZWN0b3ItNjAxMWJiYjEuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNaOztBQUV6Qyw2QkFBNkIscURBQVk7QUFDekM7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGVBQWUsK0RBQWE7QUFDNUI7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYjMtY3Jvd2RmdW5kaW5nLy4vbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvd2FsbGV0cy9kaXN0L1dhZ21pQ29ubmVjdG9yLTYwMTFiYmIxLmVzbS5qcz8xYWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRDaGFpbnMgfSBmcm9tICdAdGhpcmR3ZWItZGV2L2NoYWlucyc7XG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50ZW1pdHRlcjMnO1xuXG5jbGFzcyBXYWdtaUNvbm5lY3RvciBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIC8qKiBVbmlxdWUgY29ubmVjdG9yIGlkICovXG5cbiAgLyoqIENvbm5lY3RvciBuYW1lICovXG5cbiAgLyoqIENoYWlucyBjb25uZWN0b3Igc3VwcG9ydHMgKi9cblxuICAvKiogT3B0aW9ucyB0byB1c2Ugd2l0aCBjb25uZWN0b3IgKi9cblxuICAvKiogV2hldGhlciBjb25uZWN0b3IgaXMgdXNhYmxlICovXG5cbiAgY29uc3RydWN0b3IoX3JlZikge1xuICAgIGxldCB7XG4gICAgICBjaGFpbnMgPSBkZWZhdWx0Q2hhaW5zLFxuICAgICAgb3B0aW9uc1xuICAgIH0gPSBfcmVmO1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jaGFpbnMgPSBjaGFpbnM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICBnZXRCbG9ja0V4cGxvcmVyVXJscyhjaGFpbikge1xuICAgIGNvbnN0IGV4cGxvcmVycyA9IGNoYWluLmV4cGxvcmVycz8ubWFwKHggPT4geC51cmwpID8/IFtdO1xuICAgIHJldHVybiBleHBsb3JlcnMubGVuZ3RoID4gMCA/IGV4cGxvcmVycyA6IHVuZGVmaW5lZDtcbiAgfVxuICBpc0NoYWluVW5zdXBwb3J0ZWQoY2hhaW5JZCkge1xuICAgIHJldHVybiAhdGhpcy5jaGFpbnMuc29tZSh4ID0+IHguY2hhaW5JZCA9PT0gY2hhaW5JZCk7XG4gIH1cbiAgdXBkYXRlQ2hhaW5zKGNoYWlucykge1xuICAgIHRoaXMuY2hhaW5zID0gY2hhaW5zO1xuICB9XG59XG5cbmV4cG9ydCB7IFdhZ21pQ29ubmVjdG9yIGFzIFcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-6011bbb1.esm.js\n");

/***/ }),

/***/ "(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/errors-b9032b4e.esm.js":
/*!************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/errors-b9032b4e.esm.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ AddChainError),\n/* harmony export */   C: () => (/* binding */ ChainNotConfiguredError),\n/* harmony export */   P: () => (/* binding */ ProviderRpcError),\n/* harmony export */   R: () => (/* binding */ ResourceUnavailableError),\n/* harmony export */   S: () => (/* binding */ SwitchChainError),\n/* harmony export */   U: () => (/* binding */ UserRejectedRequestError),\n/* harmony export */   a: () => (/* binding */ ConnectorNotFoundError)\n/* harmony export */ });\n/* harmony import */ var _defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineProperty-e24c82ea.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/defineProperty-e24c82ea.esm.js\");\n\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"AddChainError\");\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"ConnectorNotFoundError\");\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    (0,_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX2NsaWVudCkvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi93YWxsZXRzL2Rpc3QvZXJyb3JzLWI5MDMyYjRlLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RTs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVEsV0FBVyxzQkFBc0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksa0VBQWU7QUFDbkIsSUFBSSxrRUFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixvQkFBb0IsUUFBUSxrQ0FBa0MsWUFBWTtBQUMxRSxJQUFJLGtFQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGtFQUFlO0FBQ25CLElBQUksa0VBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxrRUFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksa0VBQWU7QUFDbkI7QUFDQTs7QUFFQTtBQUNBOztBQUVxTSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYjMtY3Jvd2RmdW5kaW5nLy4vbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvd2FsbGV0cy9kaXN0L2Vycm9ycy1iOTAzMmI0ZS5lc20uanM/Mjg0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfIGFzIF9kZWZpbmVQcm9wZXJ0eSB9IGZyb20gJy4vZGVmaW5lUHJvcGVydHktZTI0YzgyZWEuZXNtLmpzJztcblxuLyoqXG4gKiBFcnJvciBzdWJjbGFzcyBpbXBsZW1lbnRpbmcgSlNPTiBSUEMgMi4wIGVycm9ycyBhbmQgRXRoZXJldW0gUlBDIGVycm9ycyBwZXIgRUlQLTE0NzQuXG4gKiBAc2VlIGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTQ3NFxuICovXG5jbGFzcyBScGNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoIC8qKiBIdW1hbi1yZWFkYWJsZSBzdHJpbmcgKi9cbiAgbWVzc2FnZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHtcbiAgICAgIGNhdXNlLFxuICAgICAgY29kZSxcbiAgICAgIGRhdGFcbiAgICB9ID0gb3B0aW9ucztcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoY29kZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJjb2RlXCIgbXVzdCBiZSBhbiBpbnRlZ2VyLicpO1xuICAgIH1cbiAgICBpZiAoIW1lc3NhZ2UgfHwgdHlwZW9mIG1lc3NhZ2UgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJtZXNzYWdlXCIgbXVzdCBiZSBhIG5vbmVtcHR5IHN0cmluZy4nKTtcbiAgICB9XG4gICAgc3VwZXIoYCR7bWVzc2FnZX0uIENhdXNlOiAke0pTT04uc3RyaW5naWZ5KGNhdXNlKX1gKTtcbiAgICB0aGlzLmNhdXNlID0gY2F1c2U7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbi8qKlxuICogRXJyb3Igc3ViY2xhc3MgaW1wbGVtZW50aW5nIEV0aGVyZXVtIFByb3ZpZGVyIGVycm9ycyBwZXIgRUlQLTExOTMuXG4gKiBAc2VlIGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTE5M1xuICovXG5jbGFzcyBQcm92aWRlclJwY0Vycm9yIGV4dGVuZHMgUnBjRXJyb3Ige1xuICAvKipcbiAgICogQ3JlYXRlIGFuIEV0aGVyZXVtIFByb3ZpZGVyIEpTT04tUlBDIGVycm9yLlxuICAgKiBgY29kZWAgbXVzdCBiZSBhbiBpbnRlZ2VyIGluIHRoZSAxMDAwIDw9IDQ5OTkgcmFuZ2UuXG4gICAqL1xuICBjb25zdHJ1Y3RvciggLyoqIEh1bWFuLXJlYWRhYmxlIHN0cmluZyAqL1xuICBtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2F1c2UsXG4gICAgICBjb2RlLFxuICAgICAgZGF0YVxuICAgIH0gPSBvcHRpb25zO1xuICAgIGlmICghKE51bWJlci5pc0ludGVnZXIoY29kZSkgJiYgY29kZSA+PSAxMDAwICYmIGNvZGUgPD0gNDk5OSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJjb2RlXCIgbXVzdCBiZSBhbiBpbnRlZ2VyIHN1Y2ggdGhhdDogMTAwMCA8PSBjb2RlIDw9IDQ5OTknKTtcbiAgICB9XG4gICAgc3VwZXIobWVzc2FnZSwge1xuICAgICAgY2F1c2UsXG4gICAgICBjb2RlLFxuICAgICAgZGF0YVxuICAgIH0pO1xuICB9XG59XG5jbGFzcyBBZGRDaGFpbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwgXCJBZGRDaGFpbkVycm9yXCIpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1lc3NhZ2VcIiwgXCJFcnJvciBhZGRpbmcgY2hhaW5cIik7XG4gIH1cbn1cbmNsYXNzIENoYWluTm90Q29uZmlndXJlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihfcmVmKSB7XG4gICAgbGV0IHtcbiAgICAgIGNoYWluSWQsXG4gICAgICBjb25uZWN0b3JJZFxuICAgIH0gPSBfcmVmO1xuICAgIHN1cGVyKGBDaGFpbiBcIiR7Y2hhaW5JZH1cIiBub3QgY29uZmlndXJlZCBmb3IgY29ubmVjdG9yIFwiJHtjb25uZWN0b3JJZH1cIi5gKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIFwiQ2hhaW5Ob3RDb25maWd1cmVkXCIpO1xuICB9XG59XG5jbGFzcyBDb25uZWN0b3JOb3RGb3VuZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwgXCJDb25uZWN0b3JOb3RGb3VuZEVycm9yXCIpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1lc3NhZ2VcIiwgXCJDb25uZWN0b3Igbm90IGZvdW5kXCIpO1xuICB9XG59XG5jbGFzcyBSZXNvdXJjZVVuYXZhaWxhYmxlRXJyb3IgZXh0ZW5kcyBScGNFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgc3VwZXIoXCJSZXNvdXJjZSB1bmF2YWlsYWJsZVwiLCB7XG4gICAgICBjYXVzZSxcbiAgICAgIGNvZGU6IC0zMjAwMlxuICAgIH0pO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwgXCJSZXNvdXJjZVVuYXZhaWxhYmxlXCIpO1xuICB9XG59XG5jbGFzcyBTd2l0Y2hDaGFpbkVycm9yIGV4dGVuZHMgUHJvdmlkZXJScGNFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgc3VwZXIoXCJFcnJvciBzd2l0Y2hpbmcgY2hhaW5cIiwge1xuICAgICAgY2F1c2UsXG4gICAgICBjb2RlOiA0OTAyXG4gICAgfSk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCBcIlN3aXRjaENoYWluRXJyb3JcIik7XG4gIH1cbn1cbmNsYXNzIFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvciBleHRlbmRzIFByb3ZpZGVyUnBjRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgIHN1cGVyKFwiVXNlciByZWplY3RlZCByZXF1ZXN0XCIsIHtcbiAgICAgIGNhdXNlLFxuICAgICAgY29kZTogNDAwMVxuICAgIH0pO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwgXCJVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3JcIik7XG4gIH1cbn1cblxuLy8gRXRoZXJzIGRvZXMgbm90IGhhdmUgYW4gZXJyb3IgdHlwZSBzbyB3ZSBjYW4gdXNlIHRoaXMgZm9yIGNhc3Rpbmdcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcnMtaW8vZXRoZXJzLmpzL2Jsb2IvbWFpbi9wYWNrYWdlcy9sb2dnZXIvc3JjLnRzL2luZGV4LnRzI0wyNjhcblxuZXhwb3J0IHsgQWRkQ2hhaW5FcnJvciBhcyBBLCBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciBhcyBDLCBQcm92aWRlclJwY0Vycm9yIGFzIFAsIFJlc291cmNlVW5hdmFpbGFibGVFcnJvciBhcyBSLCBTd2l0Y2hDaGFpbkVycm9yIGFzIFMsIFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvciBhcyBVLCBDb25uZWN0b3JOb3RGb3VuZEVycm9yIGFzIGEgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/errors-b9032b4e.esm.js\n");

/***/ }),

/***/ "(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-dd5a6036.esm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-dd5a6036.esm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   n: () => (/* binding */ normalizeChainId)\n/* harmony export */ });\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX2NsaWVudCkvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi93YWxsZXRzL2Rpc3Qvbm9ybWFsaXplQ2hhaW5JZC1kZDVhNjAzNi5lc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIzLWNyb3dkZnVuZGluZy8uL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3dhbGxldHMvZGlzdC9ub3JtYWxpemVDaGFpbklkLWRkNWE2MDM2LmVzbS5qcz82ZTJlIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG5vcm1hbGl6ZUNoYWluSWQoY2hhaW5JZCkge1xuICBpZiAodHlwZW9mIGNoYWluSWQgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KGNoYWluSWQsIGNoYWluSWQudHJpbSgpLnN1YnN0cmluZygwLCAyKSA9PT0gXCIweFwiID8gMTYgOiAxMCk7XG4gIH1cbiAgaWYgKHR5cGVvZiBjaGFpbklkID09PSBcImJpZ2ludFwiKSB7XG4gICAgcmV0dXJuIE51bWJlcihjaGFpbklkKTtcbiAgfVxuICByZXR1cm4gY2hhaW5JZDtcbn1cblxuZXhwb3J0IHsgbm9ybWFsaXplQ2hhaW5JZCBhcyBuIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-dd5a6036.esm.js\n");

/***/ }),

/***/ "(sc_client)/./node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InjectedConnector: () => (/* binding */ InjectedConnector)\n/* harmony export */ });\n/* harmony import */ var _dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/defineProperty-e24c82ea.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/defineProperty-e24c82ea.esm.js\");\n/* harmony import */ var _dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-e25e1cec.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-e25e1cec.esm.js\");\n/* harmony import */ var _dist_assertWindowEthereum_7e869013_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/assertWindowEthereum-7e869013.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/assertWindowEthereum-7e869013.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(sc_client)/./node_modules/ethers/lib/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _dist_WagmiConnector_6011bbb1_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../dist/WagmiConnector-6011bbb1.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-6011bbb1.esm.js\");\n/* harmony import */ var _dist_normalizeChainId_dd5a6036_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-dd5a6036.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-dd5a6036.esm.js\");\n/* harmony import */ var _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../dist/errors-b9032b4e.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/errors-b9032b4e.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(sc_client)/./node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\nfunction getInjectedName(ethereum) {\n  if (!ethereum) {\n    return \"Injected\";\n  }\n  const getName = provider => {\n    if (provider.isAvalanche) {\n      return \"Core Wallet\";\n    }\n    if (provider.isBitKeep) {\n      return \"BitKeep\";\n    }\n    if (provider.isBraveWallet) {\n      return \"Brave Wallet\";\n    }\n    if (provider.isCoinbaseWallet) {\n      return \"Coinbase Wallet\";\n    }\n    if (provider.isExodus) {\n      return \"Exodus\";\n    }\n    if (provider.isFrame) {\n      return \"Frame\";\n    }\n    if (provider.isKuCoinWallet) {\n      return \"KuCoin Wallet\";\n    }\n    if (provider.isMathWallet) {\n      return \"MathWallet\";\n    }\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) {\n      return \"1inch Wallet\";\n    }\n    if (provider.isOpera) {\n      return \"Opera\";\n    }\n    if (provider.isPortal) {\n      return \"Ripio Portal\";\n    }\n    if (provider.isTally) {\n      return \"Tally\";\n    }\n    if (provider.isTokenPocket) {\n      return \"TokenPocket\";\n    }\n    if (provider.isTokenary) {\n      return \"Tokenary\";\n    }\n    if (provider.isTrust || provider.isTrustWallet) {\n      return \"Trust Wallet\";\n    }\n    if (provider.isMetaMask) {\n      return \"MetaMask\";\n    }\n  };\n\n  // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n  if (ethereum.providers?.length) {\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length) {\n      return names;\n    }\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\nvar _provider = /*#__PURE__*/new WeakMap();\nclass InjectedConnector extends _dist_WagmiConnector_6011bbb1_esm_js__WEBPACK_IMPORTED_MODULE_1__.W {\n  constructor(arg) {\n    const defaultOptions = {\n      shimDisconnect: true,\n      getProvider: () => {\n        if ((0,_dist_assertWindowEthereum_7e869013_esm_js__WEBPACK_IMPORTED_MODULE_2__.a)(globalThis.window)) {\n          return globalThis.window.ethereum;\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options\n    });\n    /**\n     * Name of the injected connector\n     */\n    /**\n     * Whether the connector is ready to be used\n     *\n     * `true` if the injected provider is found\n     */\n    (0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    (0,_dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    /**\n     * handles the `accountsChanged` event from the provider\n     * * emits `change` event if connected to a different account\n     * * emits `disconnect` event if no accounts available\n     */\n    (0,_dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: ethers__WEBPACK_IMPORTED_MODULE_5__.utils.getAddress(accounts[0])\n        });\n      }\n    });\n    /**\n     * handles the `chainChanged` event from the provider\n     * * emits `change` event if connected to a different chain\n     */\n    (0,_dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onChainChanged\", chainId => {\n      const id = (0,_dist_normalizeChainId_dd5a6036_esm_js__WEBPACK_IMPORTED_MODULE_6__.n)(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    /**\n     * handles the `disconnect` event from the provider\n     * * emits `disconnect` event\n     */\n    (0,_dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onDisconnect\", async error => {\n      // We need this as MetaMask can emit the \"disconnect\" event upon switching chains.\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          try {\n            const isAuthorized = await this.getAccount();\n            if (isAuthorized) {\n              return;\n            }\n          } catch {\n            // If we can't get the account anymore, continue with disconnect\n          }\n        }\n      }\n      this.emit(\"disconnect\");\n\n      // Remove `shimDisconnect` => it signals that wallet is disconnected\n      if (this.options.shimDisconnect) {\n        await this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    const _provider2 = options.getProvider();\n\n    // set the name of the connector\n    if (typeof options.name === \"string\") {\n      // if name is given, use that\n      this.name = options.name;\n    } else if (_provider2) {\n      // if injected provider is detected, get name from it\n      const detectedName = getInjectedName(_provider2);\n      if (options.name) {\n        this.name = options.name(detectedName);\n      } else {\n        if (typeof detectedName === \"string\") {\n          this.name = detectedName;\n        } else {\n          this.name = detectedName[0];\n        }\n      }\n    } else {\n      // else default to \"Injected\"\n      this.name = \"Injected\";\n    }\n    this.id = \"injected\";\n    this.ready = !!_provider2;\n    this.connectorStorage = arg.connectorStorage;\n  }\n\n  /**\n   * * Connect to the injected provider\n   * * switch to the given chain if `chainId` is specified as an argument\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.a();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // request account addresses from injected provider\n      const accountAddresses = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // get the first account address\n      const firstAccountAddress = ethers__WEBPACK_IMPORTED_MODULE_5__.utils.getAddress(accountAddresses[0]);\n\n      // Switch to given chain if a chainId is specified\n      let connectedChainId = await this.getChainId();\n      // Check if currently connected chain is unsupported\n      // chainId is considered unsupported if chainId is not in the list of this.chains array\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is specified and it is not the same as the currently connected chain\n      if (options.chainId && connectedChainId !== options.chainId) {\n        // switch to the given chain\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate connectedChainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id: ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options.shimDisconnect) {\n        // add the shim shimDisconnectKey => it signals that wallet is connected\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        account: firstAccountAddress,\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.U(error);\n      }\n      if (error.code === -32002) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.R(error);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * disconnect from the injected provider\n   */\n  async disconnect() {\n    // perform cleanup\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n\n    // if shimDisconnect is enabled\n    if (this.options.shimDisconnect) {\n      // Remove the shimDisconnectKey => it signals that wallet is disconnected\n      await this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n\n  /**\n   * @returns The first account address from the injected provider\n   */\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.a();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n\n    // return checksum address\n    // https://docs.ethers.org/v5/api/utils/address/#utils-getAddress\n    return ethers__WEBPACK_IMPORTED_MODULE_5__.utils.getAddress(accounts[0]);\n  }\n\n  /**\n   * @returns The `chainId` of the currently connected chain from injected provider normalized to a `number`\n   */\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.a();\n    }\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(_dist_normalizeChainId_dd5a6036_esm_js__WEBPACK_IMPORTED_MODULE_6__.n);\n  }\n\n  /**\n   * get the injected provider\n   */\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) {\n      (0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_3__.a)(this, _provider, provider);\n      // setting listeners\n    }\n\n    return (0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_3__.b)(this, _provider);\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new ethers__WEBPACK_IMPORTED_MODULE_5__.providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  /**\n   *\n   * @returns `true` if the connector is connected and address is available, else `false`\n   */\n  async isAuthorized() {\n    try {\n      // `false` if connector is disconnected\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.a();\n      }\n      // `false` if no account address available, else `true`\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      // `false` if any error thrown\n      return false;\n    }\n  }\n\n  /**\n   * switch to given chain\n   */\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.a();\n    }\n    const chainIdHex = ethers__WEBPACK_IMPORTED_MODULE_5__.utils.hexValue(chainId);\n    try {\n      // request provider to switch to given chainIdHex\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      });\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (chain) {\n        return chain;\n      }\n      return {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (error) {\n      // if could not switch to given chainIdHex\n\n      // if tried to connect to a chain that is not configured\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (!chain) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.C({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // if chain is not added to provider\n      if (error.code === 4902 ||\n      // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      error?.data?.originalError?.code === 4902) {\n        try {\n          // request provider to add chain\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: chain.rpc,\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addError)) {\n            throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.U(error);\n          }\n\n          // else other error\n          throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.A();\n        }\n      }\n      if (this.isUserRejectedRequestError(error)) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.U(error);\n      }\n      throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_7__.S(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js\n");

/***/ }),

/***/ "(sc_client)/./node_modules/@thirdweb-dev/wallets/evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetaMaskConnector: () => (/* binding */ MetaMaskConnector)\n/* harmony export */ });\n/* harmony import */ var _dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-e25e1cec.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-e25e1cec.esm.js\");\n/* harmony import */ var _dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/defineProperty-e24c82ea.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/defineProperty-e24c82ea.esm.js\");\n/* harmony import */ var _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../dist/errors-b9032b4e.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/errors-b9032b4e.esm.js\");\n/* harmony import */ var _dist_walletIds_0caa7cf7_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/walletIds-0caa7cf7.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/walletIds-0caa7cf7.esm.js\");\n/* harmony import */ var _injected_dist_thirdweb_dev_wallets_evm_connectors_injected_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(sc_client)/./node_modules/ethers/lib/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _dist_getInjectedMetamaskProvider_d7dbfb61_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/getInjectedMetamaskProvider-d7dbfb61.esm.js */ \"(sc_client)/./node_modules/@thirdweb-dev/wallets/dist/getInjectedMetamaskProvider-d7dbfb61.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(sc_client)/./node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _UNSTABLE_shimOnConnectSelectAccount = /*#__PURE__*/new WeakMap();\nclass MetaMaskConnector extends _injected_dist_thirdweb_dev_wallets_evm_connectors_injected_esm_js__WEBPACK_IMPORTED_MODULE_0__.InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: _dist_getInjectedMetamaskProvider_d7dbfb61_esm_js__WEBPACK_IMPORTED_MODULE_2__.g\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n    (0,_dist_defineProperty_e24c82ea_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, \"id\", _dist_walletIds_0caa7cf7_esm_js__WEBPACK_IMPORTED_MODULE_4__.w.metamask);\n    (0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this, _UNSTABLE_shimOnConnectSelectAccount, {\n      writable: true,\n      value: void 0\n    });\n    (0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n\n  /**\n   * Connect to injected MetaMask provider\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_6__.a();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // Attempt to show wallet select prompt with `wallet_requestPermissions` when\n      // `shimDisconnect` is active and account is in disconnected state (flag in storage)\n      let account = null;\n      if ((0,_dist_classPrivateFieldSet_e25e1cec_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) {\n          // Attempt to show another prompt for selecting wallet if already connected\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{\n                eth_accounts: {}\n              }]\n            });\n          } catch (error) {\n            // Not all MetaMask injected providers support `wallet_requestPermissions` (e.g. MetaMask iOS).\n            // Only bubble up error if user rejects request\n            if (this.isUserRejectedRequestError(error)) {\n              throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_6__.U(error);\n            }\n          }\n        }\n      }\n\n      // if account is not already set, request accounts and use the first account\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = ethers__WEBPACK_IMPORTED_MODULE_7__.utils.getAddress(accounts[0]);\n      }\n\n      // get currently connected chainId\n      let connectedChainId = await this.getChainId();\n      // check if connected chain is unsupported\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is given, but does not match the currently connected chainId, switch to the given chainId\n      if (options.chainId && connectedChainId !== options.chainId) {\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate the chainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id : ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options?.shimDisconnect) {\n        // add shimDisconnectKey in storage - this signals that connector is \"connected\"\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider: provider,\n        account\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_6__.U(error);\n      }\n      if (error.code === -32002) {\n        throw new _dist_errors_b9032b4e_esm_js__WEBPACK_IMPORTED_MODULE_6__.R(error);\n      }\n      throw error;\n    }\n  }\n  async switchAccount() {\n    const provider = await this.getProvider();\n    await provider.request({\n      method: \"wallet_requestPermissions\",\n      params: [{\n        eth_accounts: {}\n      }]\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_client)/./node_modules/@thirdweb-dev/wallets/evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js\n");

/***/ })

};
;